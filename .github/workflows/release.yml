name: Release

on:
  push:
    tags:
      - 'v*.*.*'
      - 'v*.*.*-alpha'

jobs:
  build-and-release:
    strategy:
      matrix:
        include:
          - target: linux-x64
            os: ubuntu-latest
          - target: linux-arm64
            os: ubuntu-latest
          - target: linux-arm
            os: ubuntu-latest
          - target: linux-ppc64
            os: ubuntu-latest
          # - target: macos-x64
          #   os: macos-latest
          - target: macos-arm64
            os: macos-latest
          - target: windows-x64
            os: windows-latest
          - target: windows-arm64
            os: windows-latest
    runs-on: ${{ matrix.os }}
    env:
      NODE_OPTIONS: '--max-old-space-size=4096'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          node -e "const fs = require('fs'); try { fs.unlinkSync('package-lock.json'); } catch (e) { /* ignore */ }"
          npm install

      - name: Prepare SvelteKit
        run: npx @sveltejs/kit sync

      - name: Build app
        run: npm run build

      - name: Prepare production dependencies
        run: |
          # Convert target to platform and arch
          case "${{ matrix.target }}" in
            linux-x64)
              PLATFORM="linux"
              ARCH="x64"
              ;;
            linux-arm64)
              PLATFORM="linux"
              ARCH="arm64"
              ;;
            linux-arm)
              PLATFORM="linux"
              ARCH="arm"
              ;;
            linux-ppc64)
              PLATFORM="linux"
              ARCH="ppc64"
              ;;
            macos-arm64)
              PLATFORM="darwin"
              ARCH="arm64"
              ;;
            windows-x64)
              PLATFORM="win32"
              ARCH="x64"
              ;;
            windows-arm64)
              PLATFORM="win32"
              ARCH="arm64"
              ;;
            *)
              echo "Unknown target: ${{ matrix.target }}"
              exit 1
              ;;
          esac
          
          # Install production dependencies
          npm install --production
          npm rebuild
          
          # Clean node_modules with modclean, preserving license files
          npx modclean --run --patterns="default:safe,default:caution,default:danger" --ignore="**/LICENSE,**/COPYING,**/NOTICE,**/README*,**/COPYRIGHT,**/AUTHORS,**/CONTRIBUTORS"

      - name: Bundle for ${{ matrix.target }}
        run: node scripts/bundle-dist.js ${{ matrix.target }}

      - name: Zip dist directory
        run: |
          cd dist
          if [ "$RUNNER_OS" = "Windows" ]; then
            powershell -Command "Compress-Archive -Path 'serene-pub-*-${{ matrix.target }}' -DestinationPath '../serene-pub-${{ github.ref_name }}-${{ matrix.target }}.zip'"
          else
            zip -r "../serene-pub-${{ github.ref_name }}-${{ matrix.target }}.zip" "serene-pub-*-${{ matrix.target }}"
          fi

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          files: serene-pub-*.zip
          prerelease: ${{ contains(github.ref, 'alpha') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

