name: Release

on:
  push:
    tags:
      - 'v*.*.*'
      - 'v*.*.*-alpha'

jobs:
  build-and-release:
    strategy:
      matrix:
        include:
          - target: linux-x64
            os: ubuntu-latest
          - target: linux-arm64
            os: ubuntu-latest
          - target: linux-arm
            os: ubuntu-latest
          - target: linux-ppc64
            os: ubuntu-latest
          # - target: macos-x64
          #   os: macos-latest
          - target: macos-arm64
            os: macos-latest
          - target: windows-x64
            os: windows-latest
          - target: windows-arm64
            os: windows-latest
    runs-on: ${{ matrix.os }}
    env:
      NODE_OPTIONS: '--max-old-space-size=4096'
      NPM_CONFIG_OPTIONAL: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Clean node_modules
        shell: bash
        run: |
          if [ -d node_modules ]; then rm -rf node_modules; fi

      - name: Clean npm cache
        run: npm cache clean --force

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          # Try npm ci first
          npm ci --legacy-peer-deps || {
            echo "npm ci failed, trying fresh install"
            rm -rf node_modules package-lock.json
            npm install --legacy-peer-deps
          }
          # Workaround for rollup optional dependency issues
          npm audit fix --force || true

      - name: Fix rollup dependencies
        run: |
          # Remove problematic optional dependencies that might cause issues
          npm ls @rollup/rollup-darwin-arm64 || echo "rollup-darwin-arm64 not found, continuing..."
          # Force reinstall rollup if there are issues
          if [[ "${{ matrix.target }}" == *"linux"* ]]; then
            npm install --save-dev @rollup/rollup-linux-x64-gnu@latest || true
            npm install --save-dev @rollup/rollup-linux-arm64-gnu@latest || true
          fi
          # Clear any cached rollup builds
          npm cache clean --force

      - name: Clean build and dist directories
        shell: bash
        run: |
          if [ -d build ]; then rm -rf build; fi
          if [ -d dist ]; then rm -rf dist; fi

      - name: Print architecture info
        run: |
          echo "Node arch: $(node -p 'process.arch')"
          echo "Node platform: $(node -p 'process.platform')"
          uname -a
          uname -m
          sysctl -n machdep.cpu.brand_string || true

      - name: Build app
        run: |
          # Try building normally first
          npm run build || {
            echo "Build failed, trying with --force-rebuild flag"
            npm run build --force-rebuild || {
              echo "Build still failed, trying with clean install"
              rm -rf node_modules package-lock.json
              npm install --legacy-peer-deps
              npm run build
            }
          }

      - name: Bundle for ${{ matrix.target }}
        run: node scripts/bundle-dist.js ${{ matrix.target }}

      - name: Zip dist directory
        run: |
          cd dist
          zip -r "../serene-pub-${{ github.ref_name }}-${{ matrix.target }}.zip" "serene-pub-*-${{ matrix.target }}"
          cd ..

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          files: serene-pub-*.zip
          prerelease: ${{ contains(github.ref, 'alpha') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

